{"version":3,"sources":["test/proficiencyStats-test.ts"],"names":[],"mappings":";;AAEA,6BAA2B;AAG3B,yEAA8E;AAE9E,QAAQ,CAAC,0BAA0B,EAAE;IAEjC,EAAE,CAAC,0DAA0D,EAAE;QAC3D,IAAM,gBAAgB,GAAG;YACrB,OAAO,EAAE,CAAC;YACV,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;SACV,CAAA;QACD,IAAM,GAAG,GAAG,EAAC,GAAG,EAAE,CAAC,EAAC,CAAA;QACpB,IAAM,MAAM,GAAG;YACX,OAAO,EAAE,CAAC;YACV,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;SACV,CAAA;QACD,IAAM,eAAe,GAAG,2CAAwB,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAA;QACvE,aAAM,CAAC,eAAe,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IAEjD,CAAC,CAAC,CAAA;IACF,EAAE,CAAC,2DAA2D,EAAE;QAC5D,IAAM,gBAAgB,GAAG;YACrB,OAAO,EAAE,CAAC;YACV,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;SACV,CAAA;QACD,IAAM,GAAG,GAAG;YACR,OAAO,EAAE,CAAC;YACV,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,CAAC;YACR,IAAI,EAAE,CAAC;SACV,CAAA;QACD,IAAM,MAAM,GAAG;YACX,OAAO,EAAE,CAAC;YACV,GAAG,EAAE,CAAC;YACN,GAAG,EAAE,CAAC;YACN,KAAK,EAAE,EAAE;YACT,IAAI,EAAE,CAAC;SACV,CAAA;QACD,aAAM,CAAC,2CAAwB,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;IAEjF,CAAC,CAAC,CAAA;AAEN,CAAC,CAAC,CAAA","file":"proficiencyStats-test.js","sourcesContent":["// import {proficiencyToColor} from \"../app/components/proficiencyEnum\";\r\nimport * as assert from 'assert'\r\nimport {expect} from 'chai'\r\nimport {} from 'mocha' // types\r\n\r\nimport {addObjToProficiencyStats} from '../app/objects/tree/proficiencyStats';\r\n\r\ndescribe('addObjToProficiencyStats', () => {\r\n\r\n    it('should add a standalone ONE object to the current object', () => {\r\n        const proficiencyStats = {\r\n            UNKNOWN: 5,\r\n            ONE: 4,\r\n            TWO: 1,\r\n            THREE: 4,\r\n            FOUR: 2,\r\n        }\r\n        const ONE = {ONE: 1}\r\n        const answer = {\r\n            UNKNOWN: 5,\r\n            ONE: 5,\r\n            TWO: 1,\r\n            THREE: 4,\r\n            FOUR: 2,\r\n        }\r\n        const attemptedAnswer = addObjToProficiencyStats(proficiencyStats, ONE)\r\n        expect(attemptedAnswer).to.deep.equal(answer)\r\n\r\n    })\r\n    it('should correctly add another object to the current object', () => {\r\n        const proficiencyStats = {\r\n            UNKNOWN: 5,\r\n            ONE: 4,\r\n            TWO: 1,\r\n            THREE: 4,\r\n            FOUR: 2,\r\n        }\r\n        const obj = {\r\n            UNKNOWN: 3,\r\n            ONE: 1,\r\n            TWO: 4,\r\n            THREE: 6,\r\n            FOUR: 2,\r\n        }\r\n        const answer = {\r\n            UNKNOWN: 8,\r\n            ONE: 5,\r\n            TWO: 5,\r\n            THREE: 10,\r\n            FOUR: 4,\r\n        }\r\n        expect(addObjToProficiencyStats(proficiencyStats, obj)).to.deep.equal(answer)\r\n\r\n    })\r\n\r\n})\r\n"]}